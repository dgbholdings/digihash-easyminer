<Window x:Class="DigiHash.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:digihash="clr-namespace:DigiHash"
        Title="DigiHash" Height="500" Width="700" WindowStartupLocation="CenterScreen"
        >
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
            <GradientStop Color="Black" Offset="1"/>
            <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
        </LinearGradientBrush>
    </Window.Background>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo/>
    </Window.TaskbarItemInfo>
    <Grid>
        <Grid.Resources>            
            <ResourceDictionary>
                <digihash:IsNullConverter x:Key="IsNullConverter"/>
                <Style TargetType="{x:Type Control}" x:Key="ReadySelector">
                    <Style.Setters>
                        <Setter Property="IsEnabled" Value="true"/>
                    </Style.Setters>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Algorithms}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="false"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Started}" Value="true">
                            <Setter Property="IsEnabled" Value="false"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="ComboBox" x:Key="ComboBoxSelector" BasedOn="{StaticResource ReadySelector}">
                    <Style.Setters>
                        <Setter Property="IsReadOnly" Value="true"/>
                        <Setter Property="IsEditable" Value="true"/>
                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="FontStyle" Value="Normal"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="TextBlock.TextAlignment" Value="Justify"/>
                    </Style.Setters>
                    <Style.Triggers>
                        <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter Property="FontStyle" Value="Italic"/>
                            <Setter Property="Foreground" Value="Silver"/>
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="Button" x:Key="MiningSelector">
                    <Style.Setters>
                        <Setter Property="IsEnabled" Value="true"/>
                    </Style.Setters>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=WalletComboBox, Path=SelectedItem}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="false"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=AlgorithmComboBox, Path=SelectedItem}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="false"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Started}" Value="true">
                            <Setter Property="IsEnabled" Value="false"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>                
            </ResourceDictionary>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Grid.Row="0" >
            <GroupBox Header="Profile" Margin="0,0,5,5" Padding="0,12,0,0">
                <StackPanel>
                    <ComboBox x:Name="WalletComboBox" Width="120" ItemsSource="{Binding Path=Wallets}" DisplayMemberPath="Name" SelectedValuePath="Address" SelectedValue="{Binding Path=Profile.Wallet}" >
                        <ComboBox.Style>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxSelector}">
                                <Style.Triggers>
                                    <Trigger Property="SelectedItem" Value="{x:Null}">
                                        <Setter Property="Text" Value="--Wallet--"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                    <ComboBox x:Name="AlgorithmComboBox" Width="120" ItemsSource="{Binding Path=Algorithms}" DisplayMemberPath="Name" SelectedValuePath="Name" SelectedValue="{Binding Path=Profile.Algorithm}" UseLayoutRounding="False">
                        <ComboBox.Style>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxSelector}">
                                <Style.Triggers>
                                    <Trigger Property="SelectedItem" Value="{x:Null}">
                                        <Setter Property="Text" Value="--Algorithm--"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>                    
                </StackPanel>
            </GroupBox>
            <Button Name="WalletButton" Background="{x:Null}" Margin="5" Style="{StaticResource ReadySelector}">
                <Button.Content>
                    <StackPanel>
                        <Image Source="Resources/wallet.png" Width="64" Height="64"/>
                        <TextBlock Text="Wallet" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Name="StopButton" Background="{x:Null}" Margin="5">
                <Button.Style>
                    <Style TargetType="Button">
                        <Style.Setters>
                            <Setter Property="IsEnabled" Value="true"/>
                        </Style.Setters>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Miner, Converter={StaticResource IsNullConverter}}" Value="true">
                                <Setter Property="IsEnabled" Value="false"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>                
                <Button.Content>
                    <StackPanel>
                        <Image Source="Resources/stop.png" Width="64" Height="64"/>
                        <TextBlock Text="Stop" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button x:Name="StartButton" Background="{x:Null}" Margin="5" Style="{StaticResource MiningSelector}">
                <Button.Content>
                    <StackPanel>
                        <Image Source="Resources/play.ico" Width="64" Height="64"/>
                        <TextBlock Text="Start" HorizontalAlignment="Center" />
                    </StackPanel>
                </Button.Content>                
            </Button>
        </StackPanel>
        <RichTextBox Name="OutputRichTextBox" Grid.Row="1" IsUndoEnabled="False" AutoWordSelection="False" IsReadOnly="True" Background="Black" Foreground="White" BorderThickness="2" ScrollViewer.VerticalScrollBarVisibility="Auto">
            <RichTextBox.Resources>
                <Style TargetType="{x:Type Paragraph}">
                    <Setter Property="Margin" Value="0" />
                </Style>
            </RichTextBox.Resources>
        </RichTextBox>
    </Grid>

</Window>
    